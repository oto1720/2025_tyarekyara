rules_version = '2';

/**
 * Cloud Firestore セキュリティルール
 *
 * このファイルをFirebaseコンソールにコピーして使用してください。
 * Firebase Console > Firestore Database > ルール
 */

service cloud.firestore {
  match /databases/{database}/documents {

    // ===================================
    // ヘルパー関数
    // ===================================

    // ユーザーが認証済みかチェック
    function isAuthenticated() {
      return request.auth != null;
    }

    // リクエストしているユーザーが対象のユーザー本人かチェック
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // 必須フィールドが存在するかチェック
    function hasRequiredFields() {
      return request.resource.data.keys().hasAll([
        'id',
        'nickname',
        'email',
        'ageRange',
        'region',
        'iconUrl',
        'createdAt',
        'updatedAt'
      ]);
    }

    // ニックネームの長さが適切かチェック（2-20文字）
    function isValidNickname() {
      return request.resource.data.nickname is string &&
             request.resource.data.nickname.size() >= 2 &&
             request.resource.data.nickname.size() <= 20;
    }

    // メールアドレスの形式が正しいかチェック
    function isValidEmail() {
      return request.resource.data.email is string &&
             request.resource.data.email.matches('^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$');
    }

    // 年齢範囲が有効な値かチェック
    function isValidAgeRange() {
      return request.resource.data.ageRange in [
        '',
        '10歳未満',
        '10代',
        '20代',
        '30代',
        '40代',
        '50代',
        '60代',
        '70代',
        '80代',
        '90代'
      ];
    }

    // 地域が有効な都道府県かチェック
    function isValidRegion() {
      return request.resource.data.region in [
        '',
        '北海道', '青森県', '岩手県', '宮城県', '秋田県', '山形県', '福島県',
        '茨城県', '栃木県', '群馬県', '埼玉県', '千葉県', '東京都', '神奈川県',
        '新潟県', '富山県', '石川県', '福井県', '山梨県', '長野県', '岐阜県',
        '静岡県', '愛知県', '三重県', '滋賀県', '京都府', '大阪府', '兵庫県',
        '奈良県', '和歌山県', '鳥取県', '島根県', '岡山県', '広島県', '山口県',
        '徳島県', '香川県', '愛媛県', '高知県', '福岡県', '佐賀県', '長崎県',
        '熊本県', '大分県', '宮崎県', '鹿児島県', '沖縄県'
      ];
    }

    // 更新時に変更不可フィールドが変更されていないかチェック
    function isNotChangingImmutableFields() {
      return request.resource.data.id == resource.data.id &&
             request.resource.data.email == resource.data.email &&
             request.resource.data.createdAt == resource.data.createdAt;
    }

    // ===================================
    // ユーザーコレクション
    // ===================================

    match /users/{userId} {

      // 読み取り権限
      // - 認証済みユーザーは全員、他のユーザーのプロフィールを読み取り可能
      // - これにより、他のユーザーのニックネームや地域などを表示できる
      allow read: if isAuthenticated();

      // 作成権限
      // - 認証済みユーザーは、自分のドキュメントのみ作成可能
      // - 必須フィールドがすべて存在すること
      // - バリデーションに合格すること
      allow create: if isOwner(userId) &&
                       hasRequiredFields() &&
                       isValidNickname() &&
                       isValidEmail() &&
                       isValidAgeRange() &&
                       isValidRegion() &&
                       request.resource.data.id == userId;

      // 更新権限
      // - 認証済みユーザーは、自分のドキュメントのみ更新可能
      // - 不変フィールド（id, email, createdAt）は変更不可
      // - バリデーションに合格すること
      allow update: if isOwner(userId) &&
                       hasRequiredFields() &&
                       isValidNickname() &&
                       isValidEmail() &&
                       isValidAgeRange() &&
                       isValidRegion() &&
                       isNotChangingImmutableFields();

      // 削除権限
      // - 認証済みユーザーは、自分のドキュメントのみ削除可能
      // - TODO: 今後、アカウント削除機能を実装する際に使用
      allow delete: if isOwner(userId);
    }

    // ===================================
    // その他のコレクション
    // ===================================

    // 今後、新しいコレクションを追加する場合はここに記述
    // 例: 投稿、コメント、いいね など
  }
}
